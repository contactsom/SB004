TODO:







After installation of Pycharm, Can you help us with Python Interpreter

1. Introduction of Python
2. Installation
3. IDE
4. Number System.
5. How to Create the folder/package
6. Extension of python file
7. How to create the python file
8. How to provide the name for python file
9. How to change the file source to execute the code.
10. What is integer data type
11. what is float data type
12. what is String data type a
13. what is List data type
14. What is Dictionary type


[]  -> list
()  -> tuple
{:} -> dict
{}  -> set



int x = 2
int y = 2
int z= x*y #


Difference between a/b and a%b

a/b - > returns q
a%b -> reminder r

I do not understand the way you explained the difference

1. Division operator will return you quotent always as float
Where as
2. Floor Division (Case-1) , will return you the quotent but for respective type .
    MEANS , IF two number are integer , quotent will come as integer
            IF two number are float , quotent will come as float


Every real number is perfectely divisible by 1 and itself -> Agree or not Agree


 x = 10
 int = 10

int


y = y + x is equivalant to y += x


 first letter is Upper case for .py file
 first letter is lower case for any of the variable name

 x = 10
 a = 10.8


 x = 20
 _x = 20
 12 = 30


x = 10
X = 10

my age = 10

myage = 10

myage = myage + 20

myage = 30


*****************************************************
This is valid Comment or not ? true/false
1. # a = 10 -> true
2. # $a= 20 -> true
3. ## dd= 2= -> true
4. ## a= 30 ## -> true
5. ''' a= 20 ''' -> true
6. #''' a= 20 ''' ->  true
7.  '''

        ''' I am some thing ''' '''9692364&*&*@(#E$@*$(*@#_)$*@$_@)$_( ''' ''' ''' '''

    ''' -> true
8 . # a = a(b -> true
9. """  this is comment """

**************************************
Type Casting :

Cloht Store -
I need one degree C shirt ?
Sir are you looking for one Shirt ? YES YES YES

*******************************************
IF - ELSE - IF

School Days :
Grade
A , A+ , A++
B , B+ , B++
C , C+ , C++



If student marks is  98 >= than grade A++
Else IF student marks is  98 < and > 90 than grade A+
Else IF student marks is  90 < and > 80 than grade A

Decision Making : Agree ?












transitivity Rule

X > y
AND
y > z
=> x > z

100
100 is grater than 90 true
100 is grater than 80 true
100 is grater than 70 true



IF - Student 1 : 98 = A++
IF - Student 2 : 60 = C++
IF - Student 3 : 40 = C
IF - Student 4 : 78 = B++
IF - Student 5 : 55 = C++
FAIL

# Dictionary default will print key
# With value, It Print only value
# With items, it print one record which is key and value

***********
String Represenataion :
    1. ""
    2. ''
    3. """ """
    4. ''' '''






Filter : INPUT: Something , RESULT:out of that
myList = [1,3,6,2,8,10] = Size 6
FilterOutPut = [6,2,8,10] = Size 4
Size of FilterOutPut <= size of myList
4<6

Filter : INPUT: Something , RESULT:out of that
myList = [6,2,8,10] = Size 4
FilterOutPut = [6,2,8,10] = Size 4
Size of FilterOutPut <= size of myList
4=4

# Filter Size is <= to the output
# Map Size is = to the output





Q1 : You have list of Employee , You want to increase there salery with 20%
    a- Use Map (T)
    b- Use Filter

Q2 : You have list of Employee , Find out the Male Employee ot of that
    a- Use Map
    b- Use Filter (T)












Project 1
DESCRIPTION
Many patients visit AB Hospital for a routine health checkup, accidental injuries or any other ailment treatment.
Each patient has to register with the hospital if they are visiting the hospital for the first time.
So, it gets very difficult for the reception boy Suresh to manage the records of every patient in a logbook manually
 as if the user has already registered he has to search the patient’s name throughout the book containing thousands of records.

Objective: To dlop an application in Django that checks if the patient is already registered and registers the patient
if they’re not.



Project 2
DESCRIPTION
Zara is developing a new version of password manager. Earlier,
she was using some third-party password manager but she figured out that it can't keep track of all the passwords
which has been set for the respective account. As she is very concerned about the security,
she decided to develop her own version of the password manager
Objective: To develop a custom password manager using Python

Domain:  Security
Steps to perform:
Implement the following design
class BasePasswordManager
    members
        old_passwords: is a list that holds all of the user's past  passwords.
                           The last item of the list is the user's current password.
    methods
        get_password method that returns the current password as a string.

        is_correct method that receives a string and returns a boolean
             True or False depending on whether the string is equal to
             the current password or not.

class PasswordManager
    This class inherits from BasePasswordManager

        methods
        set_password method that sets the user's password.
             Password change is successful only if:
                    - Security level of the new password is greater.
                    -

Project 3
DESCRIPTION
Implement a Python decorator that should take whatever the decorated function returns, and write it to a file
in a new line. For the sake of this problem, let us assume that the decorated functions always return a string.
 The decorator should be named log_message and should write to the file /tmp/decorator_logs.txt.
Objective: To develop a Python decorator

Steps to perform:
Implement the following design
@log_message
def a_function_that_returns_a_string():
      return "A string"
@log_message
def a_function_that_returns_a_string_with_newline(s):
      return "{}\n".format(s)
@log_message
def a_function_that_returns_another_string(string=""):
            return "Another string"


Project 4
DESCRIPTION
Create a desktop python app that, can provide the advanced functionalities that are not generally available in the default calendar module.
When run, the application should be able to ascertain the current day, date, month and year using the existing modules
(Ex. Calendar) but the rest of the functionalities should be purely computed based on the algorithm and the flow of thoughts captured in the problem statement.
The application expects the learners to compute a future calendar (future month, for that date) or a past calendar (past month) of the given date (today).
The application building expects the users to use their knowledge of Python using features such as Python Shell, Python list and sets, dictionary, formatting, utilities, calendar (for verification), geocoder (for lat and long), ‘os ’and ‘sys ’ and usual program control flow structures.
The application design should follow the below guidelines:

Health Tracker
Project 5
DESCRIPTION
Lyka, the sporting shoe company, approaches you to create a simple python app that helps in tracking workouts,
energy (or calories) burnt, BMI, weekly rewards, monthly rewards, fastest week, slowest month, etc.
Some of the features are shown below.
The application will accept the following initial inputs from any user:
Name, Age, Sex, Weight, Height
You should be able to use either the FPS or Metric system with regards to weight and height.
The app should accept the next set of inputs, which are:
Day
Number of steps
Time taken (hours:minutes: seconds)
You can provide a number of inputs based on the following: Assumptions: Day = 1 for Monday, Day = 2 for Tuesday, etc.
Sample Input and Output
A typical 1-week sample input of 7 days will have the following input:
1, 7500, 1:02:05
2, 8500, 1:06:12
3, 3500, 0:52:25
4, 4250, 0:59:35
5, 7800, 1:01:55
6, 8500, 1:12:15




































